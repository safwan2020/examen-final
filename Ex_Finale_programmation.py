# -*- coding: utf-8 -*-
"""DiabeteAnalyse.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mSlkvbBAZY_lGC9sI-CwE9nhnjFXmVzL
"""

import pandas as pd 
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns 
import plotly.express as px
import time

data = pd.read_csv('diabetes.csv')
data.head()

data.columns #une vue sur les colonnes

data.info

data.describe()

data=data.drop_duplicates()

"""combien de valeurs nules:"""

data.isnull().sum()

"""combien de valeurs zéro : """

print(data[data['BloodPressure']==0].shape[0])
print(data[data['Glucose']==0].shape[0])
print(data[data['SkinThickness']==0].shape[0])
print(data[data['Insulin']==0].shape[0])
print(data[data['BMI']==0].shape[0])

"""on remplace les (0) par la moyenne """

data['Glucose']=data['Glucose'].replace(0,data['Glucose'].mean())
data['BloodPressure']=data['BloodPressure'].replace(0,data['BloodPressure'].mean())
data['SkinThickness']=data['SkinThickness'].replace(0,data['SkinThickness'].mean())
data['Insulin']=data['Insulin'].replace(0,data['Insulin'].mean())
data['BMI']=data['BMI'].replace(0,data['BMI'].mean())

print (data)

"""**le nombre de diabetques vs les non** **diabetiques** **texte en gras**"""

sns.countplot('Outcome',data=data)

ax= px.histogram(data,x= "Age", template= "plotly_dark",color= "Outcome",title='Distribution_Age')
ax.show()

"""on remarque que tant que l age avance tant qu il y a plus de personnes diabétiques

poucentage entre diabétiques et non diabétiques
1= Diabétique
0=Non Diabétique
"""

ax= px.pie(data, names= "Outcome",template= "plotly_dark",title= "Diabetique ou Non_Diabétique",hole= 0.5)
ax.show()

"""65.1% Non diabétiques
34.9 Diabétiques
"""

data.hist(bins=10,figsize=(10,10))
plt.show()

corrmatrix=data.corr()
sns.heatmap(corrmatrix, annot=True)

!pip install missingno
import missingno as msno
msno.matrix(data)

plt.figure(figsize=(16,12))
sns.set_style(style='whitegrid')
plt.subplot(3,3,1)
sns.boxplot(x='Glucose',data=data)
plt.subplot(3,3,2)
sns.boxplot(x='BloodPressure',data=data)
plt.subplot(3,3,3)
sns.boxplot(x='Insulin',data=data)
plt.subplot(3,3,4)
sns.boxplot(x='BMI',data=data)
plt.subplot(3,3,5)
sns.boxplot(x='Age',data=data)
plt.subplot(3,3,6)
sns.boxplot(x='SkinThickness',data=data)
plt.subplot(3,3,7)
sns.boxplot(x='Pregnancies',data=data)
plt.subplot(3,3,8)
sns.boxplot(x='DiabetesPedigreeFunction',data=data)

from pandas.plotting import scatter_matrix
scatter_matrix(data,figsize=(20,20));

ax= px.scatter(data,x= "Glucose",y= "Age",marginal_x='histogram', marginal_y='histogram',size="Age", size_max=20,
              template= "plotly_dark",color= "Outcome",title="age & glucose correlation")
ax.show()

"""**Correlation entre age et Glucose:**"""

ax= px.scatter(data,x= "Glucose",y= "Age",marginal_x='histogram', marginal_y='histogram',size="Age", size_max=20,
              template= "plotly_dark",color= "Outcome",title="age & glucose correlation")
ax.show()

ax= px.scatter(data,x= "BloodPressure",y= "Age",marginal_x='histogram', marginal_y='histogram',size="Age", size_max=20,
              template= "plotly_dark",color= "Outcome",title="age & Préssion correlation")
ax.show()

"""Corrélation entre Age et Insuline"""

ax= px.scatter(data,x= "Insulin",y= "Age",marginal_x='histogram', marginal_y='histogram',size="Age", size_max=20,
              template= "plotly_dark",color= "Outcome",title="Age & Insuline correlation")
ax.show()

"""Nuage de points 3D montrant la corrélation entre l’insuline et le glucose à travers les âges.


"""

ax = px.scatter_3d(data, x="Age", y="Glucose", z="Insulin",template= "plotly_dark",color="Outcome")
ax.show()

data

"""présentation graphique de """

dt= data.iloc[:,6:]

ax= px.parallel_coordinates(dt, color="Outcome",template= "plotly_dark")
ax.show()

fig = px.area(data, x="Age", y="BMI", color="Outcome",template= "plotly_dark")
fig.show()

dt= data.iloc[:,1:8]
ax = px.box(dt,template= "plotly_dark")
ax.show()